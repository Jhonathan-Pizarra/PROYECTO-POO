package proyecto_final;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author HP
 */
public class GUILoading extends javax.swing.JFrame {

        
    
    private Timer timer;
       
    ArrayList<Object> listaEscenarios = new ArrayList();
    Escenarios escena = new Escenarios();
    int idEscena;
    DefaultComboBoxModel modeloComboBox;
    Control registro = new Control();
    //Escenarios escenarioSeleccionado = new Escenarios(); //Constructor vacío
    int indice;
    int idPlayer1;
    int idPlayer2;
    int idPersonajeA;
    int idPersonajeB;
    ImageIcon imagenEscenaA, imagenEscenaB, imagenEscenaC, imagenEscenaD, imagenEscenaF, imagenEscenaG;
    ImageIcon EscenaA, EscenaB, EscenaC, EscenaD, EscenaF, EscenaG;
        
    /**
     * Creates new form GUILoading
     */
    public GUILoading(int idJugador1, int idJugador2, int idPersonaje1, int idPersonaje2) {
           
        initComponents();
        
        idPlayer1 = idJugador1;
        idPlayer2 = idJugador2;
        idPersonajeA = idPersonaje1;
        idPersonajeB = idPersonaje2;
        
        System.out.println("Llega Personaje: " + idPersonajeA);
        System.out.println("Llega Personaje: " + idPersonajeB);
        
        System.out.println("Llega Jugador: " + idPlayer1);
        System.out.println("Llega Jugador: " + idPlayer2);
    
        //listaEscenarios = registro.cargarObjetos("archivoEscenarios.dat");
        
        
        ponerFondo();
        llenarDatos();
        llenarComboEscenarios();
        System.out.println("Holaaa");
        
       labelFondoEscenario.setVisible(true);
       
       buttonJugar.setEnabled(false);
       labelSharingan.setVisible(false);
       labelLoading.setVisible(false);
       progreso.setVisible(false);
       this.setLocationRelativeTo(null);
       
    
    
    }

    public class progreso implements ActionListener{
        
        public void actionPerformed(ActionEvent evt){
            
      
        int n = progreso.getValue(); 
        if(n < 100){
            
            n++;
            progreso.setValue(n);
        }else{
        
            int icono = JOptionPane.INFORMATION_MESSAGE;
            timer.stop();
            JOptionPane.showMessageDialog(rootPane, "¡Carga completada exitosamente!", "NARUTO ULTIMATE NIJA", icono);
            irSeleccion();
          
            GUIBatalla batalla = new GUIBatalla(idPlayer1,idPlayer2,idPersonajeA,idPersonajeB, idEscena);
            batalla.setVisible(true);
        
            }
        
        }
    
    }
    
    public void irSeleccion(){
        this.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonJugar = new javax.swing.JButton();
        buttonVolver = new javax.swing.JButton();
        progreso = new javax.swing.JProgressBar();
        comboBoxEscenario = new javax.swing.JComboBox();
        labelPista3 = new javax.swing.JLabel();
        labelEscena = new javax.swing.JLabel();
        labelPista2 = new javax.swing.JLabel();
        labelSharingan = new javax.swing.JLabel();
        labelLoading = new javax.swing.JLabel();
        labelPista = new javax.swing.JLabel();
        labelFondoEscenario = new javax.swing.JLabel();
        labelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonJugar.setText("JUGAR");
        buttonJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJugarActionPerformed(evt);
            }
        });
        getContentPane().add(buttonJugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 600, 140, 40));

        buttonVolver.setText("VOLVER ");
        buttonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVolverActionPerformed(evt);
            }
        });
        getContentPane().add(buttonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 600, 140, 40));

        progreso.setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().add(progreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 654, 1300, 20));

        comboBoxEscenario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEscenarioActionPerformed(evt);
            }
        });
        getContentPane().add(comboBoxEscenario, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 280, 30));

        labelPista3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        labelPista3.setForeground(new java.awt.Color(255, 255, 255));
        labelPista3.setText("Escoge tu escenario:");
        getContentPane().add(labelPista3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, -1, -1));
        getContentPane().add(labelEscena, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 400, 400));

        labelPista2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        labelPista2.setForeground(new java.awt.Color(255, 255, 255));
        labelPista2.setText("Volver a Personajes");
        getContentPane().add(labelPista2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 580, -1, -1));
        getContentPane().add(labelSharingan, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 460, 180, 180));
        getContentPane().add(labelLoading, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 710, 270));

        labelPista.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        labelPista.setForeground(new java.awt.Color(255, 255, 255));
        labelPista.setText("        Jugar");
        labelPista.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(labelPista, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 580, 110, 20));
        getContentPane().add(labelFondoEscenario, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 690));
        getContentPane().add(labelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void ponerEscenarios(){
    
        imagenEscenaA = new ImageIcon(getClass().getResource("/imagenes/Escena_1.jpg"));    
        imagenEscenaB = new ImageIcon(getClass().getResource("/imagenes/Escena_2.png"));      
        imagenEscenaC = new ImageIcon(getClass().getResource("/imagenes/Escena_3.jpg"));      
        imagenEscenaD = new ImageIcon(getClass().getResource("/imagenes/Escena_4.png"));      
        imagenEscenaF = new ImageIcon(getClass().getResource("/imagenes/Escena_5.png"));      
        imagenEscenaG = new ImageIcon(getClass().getResource("/imagenes/Escena_6.gif"));      
        
        EscenaA = new ImageIcon(imagenEscenaA.getImage().getScaledInstance(labelEscena.getWidth(), labelEscena.getHeight(), Image.SCALE_DEFAULT));
        EscenaB  = new ImageIcon(imagenEscenaB.getImage().getScaledInstance(labelEscena.getWidth(), labelEscena.getHeight(), Image.SCALE_DEFAULT));
        EscenaC  = new ImageIcon(imagenEscenaC.getImage().getScaledInstance(labelEscena.getWidth(), labelEscena.getHeight(), Image.SCALE_DEFAULT));
        EscenaD  = new ImageIcon(imagenEscenaD.getImage().getScaledInstance(labelEscena.getWidth(), labelEscena.getHeight(), Image.SCALE_DEFAULT));
        EscenaF  = new ImageIcon(imagenEscenaF.getImage().getScaledInstance(labelEscena.getWidth(), labelEscena.getHeight(), Image.SCALE_DEFAULT));
        EscenaG  = new ImageIcon(imagenEscenaG.getImage().getScaledInstance(labelEscena.getWidth(), labelEscena.getHeight(), Image.SCALE_DEFAULT));
        
       
        indice =  comboBoxEscenario.getSelectedIndex();
        
        if(indice == 0){
        
           
           labelEscena.setIcon(EscenaA);
        
        }else if(indice == 1 ){
        
            labelEscena.setIcon(EscenaB);
        
        }else if(indice == 2 ){
        
            labelEscena.setIcon(EscenaC);
        
        }else if(indice == 3 ){
        
            labelEscena.setIcon(EscenaD);
        
        }else if(indice == 4 ){
        
            labelEscena.setIcon(EscenaF);
        
        }else if(indice == 5 ){
        
            labelEscena.setIcon(EscenaG);
        
        }
        
    }
    
    public void llenarDatos(){
    
    
        Escenarios miEscenaA = new Escenarios("Valle del fin", imagenEscenaA);
        Escenarios miEscenaB = new Escenarios("Konoha", imagenEscenaB);
        Escenarios miEscenaC = new Escenarios("Playa", imagenEscenaC);
        Escenarios miEscenaD = new Escenarios("Bosque de la muerte", imagenEscenaD);
        Escenarios miEscenaF = new Escenarios("Exámenes Chuninn", imagenEscenaF);
        Escenarios miEscenaG = new Escenarios("Campo de entrenamiento", imagenEscenaG);
       // Escenarios miEscenaB = new Escenarios("Konoha", imagenEscenaB);
        listaEscenarios.add(miEscenaA);
        listaEscenarios.add(miEscenaB);
        listaEscenarios.add(miEscenaC);
        listaEscenarios.add(miEscenaD);
        listaEscenarios.add(miEscenaF);
        listaEscenarios.add(miEscenaG);
        
        registro.escribirObjeto("archivoEscenarios.dat", listaEscenarios);
        
    }
    
    private void llenarComboEscenarios(){
    
        modeloComboBox = new DefaultComboBoxModel(listaEscenarios.toArray());
        comboBoxEscenario.setModel(modeloComboBox);
        
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        timer = new Timer(120, new progreso());
       
    }//GEN-LAST:event_formWindowOpened

    private void buttonJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJugarActionPerformed
        // TODO add your handling code here:   
        
        timer.start();
        
        idEscena = comboBoxEscenario.getSelectedIndex();
        comboBoxEscenario.setVisible(false);
        labelFondoEscenario.setVisible(false);
        labelSharingan.setVisible(true);
        labelLoading.setVisible(true);
        progreso.setVisible(true);
        
        labelEscena.setVisible(false);
        labelPista.setVisible(false);
        labelPista2.setVisible(false);
        labelPista3.setVisible(false);
        buttonJugar.setVisible(false);
        buttonVolver.setEnabled(false);
        buttonVolver.setVisible(false);
        
        
    }//GEN-LAST:event_buttonJugarActionPerformed

    private void buttonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVolverActionPerformed
        // TODO add your handling code here:
        GUIRegistro registro = new GUIRegistro();
        
        this.setVisible(false);
        registro.setVisible(true);
    }//GEN-LAST:event_buttonVolverActionPerformed

    private void comboBoxEscenarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEscenarioActionPerformed
        // TODO add your handling code here:
        
        ponerEscenarios();
        buttonJugar.setEnabled(true);
    }//GEN-LAST:event_comboBoxEscenarioActionPerformed

     private void ponerFondo(){
    
        ImageIcon imagenFondo, imagenLoading, imagenSharingan, imagenEscenario;
        ImageIcon fondo, fondoLoading, fondoSharingan, fondoEscena;
         
         
        imagenFondo = new ImageIcon(getClass().getResource("/imagenes/fondoLoading.jpg"));        
        fondo = new ImageIcon(imagenFondo.getImage().getScaledInstance(labelFondo.getWidth(), labelFondo.getHeight(), Image.SCALE_DEFAULT));
        labelFondo.setIcon(fondo);
    
        imagenSharingan = new ImageIcon(getClass().getResource("/imagenes/Sonic.gif"));
        fondoSharingan = new ImageIcon(imagenSharingan.getImage().getScaledInstance(labelSharingan.getWidth(), labelSharingan.getHeight(), Image.SCALE_DEFAULT));
        labelSharingan.setIcon(fondoSharingan);
        
        imagenLoading = new ImageIcon(getClass().getResource("/imagenes/loading.gif"));
        fondoLoading  = new ImageIcon(imagenLoading.getImage().getScaledInstance(labelLoading.getWidth(), labelLoading.getHeight(), Image.SCALE_DEFAULT));
        labelLoading.setIcon(fondoLoading);
        
        imagenEscenario = new ImageIcon(getClass().getResource("/imagenes/fondoEscenario.gif"));        
        fondoEscena = new ImageIcon(imagenEscenario.getImage().getScaledInstance(labelFondoEscenario.getWidth(), labelFondoEscenario.getHeight(), Image.SCALE_DEFAULT));
        labelFondoEscenario.setIcon(fondoEscena);
        

        
    }
     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUILoading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUILoading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUILoading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUILoading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new GUILoading(0,0,0,0).setVisible(true);
                 
                
                
            }
        
        });
           
    }

 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonJugar;
    private javax.swing.JButton buttonVolver;
    private javax.swing.JComboBox comboBoxEscenario;
    private javax.swing.JLabel labelEscena;
    private javax.swing.JLabel labelFondo;
    private javax.swing.JLabel labelFondoEscenario;
    private javax.swing.JLabel labelLoading;
    private javax.swing.JLabel labelPista;
    private javax.swing.JLabel labelPista2;
    private javax.swing.JLabel labelPista3;
    private javax.swing.JLabel labelSharingan;
    private javax.swing.JProgressBar progreso;
    // End of variables declaration//GEN-END:variables
}
